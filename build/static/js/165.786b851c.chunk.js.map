{"version":3,"file":"static/js/165.786b851c.chunk.js","mappings":"8NACA,GAAgB,QAAU,yBAAyB,YAAc,6BAA6B,kBAAoB,oCCAlH,EAAyB,2BAAzB,EAA6D,2B,mBCkB7D,EAbmB,SAACA,GAClB,OACE,gBAAKC,UAAWC,EAA8B,UAC5C,SAAC,KAAO,CACND,UAAWD,EAAMG,SAAWD,EAAgC,GAC5DE,GAAE,mBAAcJ,EAAMK,QAAS,SAE9BL,EAAMM,iBAIf,EChBA,EAA8B,6BAA9B,EAAyE,6BCWzE,EARgB,SAACN,GACf,OACE,gBAAKC,UAAWM,EAAgC,UAC9C,cAAGN,UAAWM,EAAgC,SAAEP,EAAMQ,eAG5D,E,uCCiBMC,GAAsBC,EAAAA,EAAAA,GAAU,CACpCC,KAAM,wBADoBD,EAhBL,SAACV,GACtB,OACE,iBAAMY,SAAUZ,EAAMa,aAAa,UACjC,iBAAKZ,UAAWa,EAAAA,kBAAsC,WACpD,SAACC,EAAA,EAAK,CACJC,UAAWC,EAAAA,GACXC,KAAK,UACLC,YAAY,kBACZC,SAAU,CAACC,EAAAA,GAAeC,EAAAA,EAAAA,GAAiB,SAE7C,mDAIR,IAiCA,EA3BgB,SAACtB,GAKf,OACE,iBAAKC,UAAWa,EAAAA,QAA4B,WAC1C,gBAAKb,UAAWa,EAAAA,YAAgC,SAC7Cd,EAAMuB,YAAYC,KAAI,SAACC,EAAYC,GAAK,OACvC,SAAC,EAAU,CAETrB,OAAQoB,EAAWpB,OACnBC,cAAemB,EAAWnB,cAC1BH,SAAUsB,EAAWtB,UAHhBuB,EAIL,OAGN,iBAAKzB,UAAWa,EAAAA,SAA6B,UAC1Cd,EAAM2B,SAASH,KAAI,SAACI,EAASF,GAAK,OACjC,SAAC,EAAO,CAAalB,YAAaoB,EAAQpB,aAA5BkB,EAA2C,KAE3D,SAACjB,EAAmB,CAACG,SApBL,SAACiB,GACrB7B,EAAM8B,YAAYD,EAAOD,QAC3B,SAsBF,E,UCxBA,GALyBG,E,QAAAA,KACvBC,EAAAA,EAAAA,KAhBsB,SAACC,GACvB,MAAO,CACLV,YAAaU,EAAMC,aAAaC,gBAChCR,SAAUM,EAAMC,aAAaE,aAEjC,IAE2B,SAACC,GAC1B,MAAO,CACLP,YAAa,SAACF,GACZS,GAASC,EAAAA,EAAAA,GAAyBV,GACpC,EAEJ,IAIEW,EAAAA,EAFuBR,CAGvBS,E","sources":["webpack://react-the-way-of-the-samurai/./src/components/Dialogs/Dialogs.module.css?1b2e","webpack://react-the-way-of-the-samurai/./src/components/Dialogs/DialogItem/DialogItem.module.css?beb9","components/Dialogs/DialogItem/DialogItem.jsx","webpack://react-the-way-of-the-samurai/./src/components/Dialogs/Message/Message.module.css?72d0","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__oe96H\",\"dialogItems\":\"Dialogs_dialogItems__VFpmc\",\"messageInputField\":\"Dialogs_messageInputField__1CsC2\"};","// extracted by mini-css-extract-plugin\nexport default {\"active\":\"DialogItem_active__wvgh9\",\"dialog\":\"DialogItem_dialog__gU34-\"};","import React from \"react\";\n\nimport dialogItemStyleClasses from './DialogItem.module.css';\n\nimport { NavLink } from \"react-router-dom\";\n\nconst DialogItem = (props) => {\n  return (\n    <div className={dialogItemStyleClasses.dialog}>\n      <NavLink\n        className={props.isActive ? dialogItemStyleClasses.active : \"\"}\n        to={`/dialogs/${props.userId}`}\n      >\n        {props.userFirstName}\n      </NavLink>\n    </div>\n  );\n};\n\nexport default DialogItem;\n","// extracted by mini-css-extract-plugin\nexport default {\"messageItem\":\"Message_messageItem__d9m-A\",\"messageText\":\"Message_messageText__YRcAY\"};","import React from \"react\";\n\nimport messageStyleClasses from \"./Message.module.css\";\n\nconst Message = (props) => {\n  return (\n    <div className={messageStyleClasses.messageItem}>\n      <p className={messageStyleClasses.messageText}>{props.messageText}</p>\n    </div>\n  );\n};\n\nexport default Message;\n","import React from \"react\";\n\nimport dialogsStyleClasses from \"./Dialogs.module.css\";\n\nimport DialogItem from \"./DialogItem/DialogItem\";\nimport Message from \"./Message/Message\";\nimport { Navigate } from \"react-router-dom\";\nimport { Field, reduxForm } from \"redux-form\";\nimport { TextArea } from \"../common/FormControls/FormControls\";\nimport { maxLengthCreator, requiredField } from \"../../utils/validators/validators\";\n\nconst AddMessageForm = (props) => {\n  return (\n    <form onSubmit={props.handleSubmit}>\n      <div className={dialogsStyleClasses.messageInputField}>\n        <Field\n          component={TextArea}\n          name=\"message\"\n          placeholder=\"Enter a message\"\n          validate={[requiredField, maxLengthCreator(1000)]}\n        />\n        <button>Send a message</button>\n      </div>\n    </form>\n  );\n};\n\nconst AddMessageReduxForm = reduxForm({\n  form: \"dialogAddMessageForm\",\n})(AddMessageForm);\n\nconst Dialogs = (props) => {\n  const addNewMessage = (values) => {\n    props.sendMessage(values.message);\n  }\n\n  return (\n    <div className={dialogsStyleClasses.dialogs}>\n      <div className={dialogsStyleClasses.dialogItems}>\n        {props.dialogItems.map((dialogItem, index) => (\n          <DialogItem\n            key={index}\n            userId={dialogItem.userId}\n            userFirstName={dialogItem.userFirstName}\n            isActive={dialogItem.isActive}\n          />\n        ))}\n      </div>\n      <div className={dialogsStyleClasses.messages}>\n        {props.messages.map((message, index) => (\n          <Message key={index} messageText={message.messageText} />\n        ))}\n        <AddMessageReduxForm onSubmit={addNewMessage} />\n      </div>\n    </div>\n  );\n};\n\nexport default Dialogs;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport {\n  sendMessageActionCreator,\n  updateSendingMessageActionCreator,\n} from \"../../redux/dialogsReducer.js\";\n\nimport Dialogs from \"./Dialogs\";\nimport withAuthRedirect from \"../../hoc/AuthRedirect.js\";\nimport { compose } from \"redux\";\n\nconst mapStateToProps = (state) => {\n  return {\n    dialogItems: state.dialogsState.dialogItemState,\n    messages: state.dialogsState.messageState,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    sendMessage: (message) => {\n      dispatch(sendMessageActionCreator(message));\n    }\n  };\n};\n\nconst DialogsContainer = compose(\n  connect(mapStateToProps, mapDispatchToProps),\n  withAuthRedirect\n)(Dialogs);\n\nexport default DialogsContainer;\n"],"names":["props","className","dialogItemStyleClasses","isActive","to","userId","userFirstName","messageStyleClasses","messageText","AddMessageReduxForm","reduxForm","form","onSubmit","handleSubmit","dialogsStyleClasses","Field","component","TextArea","name","placeholder","validate","requiredField","maxLengthCreator","dialogItems","map","dialogItem","index","messages","message","values","sendMessage","compose","connect","state","dialogsState","dialogItemState","messageState","dispatch","sendMessageActionCreator","withAuthRedirect","Dialogs"],"sourceRoot":""}